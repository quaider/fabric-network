version: '2'

services: 

  peer1.org2.cnabs.com:
    container_name: peer1.org2.cnabs.com
    extends: 
      file: docker-base.yaml
      service: peer-base
    environment: 
      - CORE_PEER_ID=peer1.org2.cnabs.com
      - CORE_PEER_LOCALMSPID=org2MSP
      - CORE_PEER_ADDRESS=peer1.org2.cnabs.com:8151
      # - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org2.cnabs.com:8152
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org2.cnabs.com:8151
      # CORE_PEER_GOSSIP_BOOTSTRAP 只需在非锚节点上设置，它的值通常是锚节点(对于每个组织可以将其设置为已经在线上的节点)
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.cnabs.com:8051
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    # --peer-chaincodedev=true用于开启dev模式，生成环境去掉即可
    command: peer node start
    # peer容器的7052端口用于 chaincode连接到peer节点(容器)
    ports: 
      - 8151:7051
      # - 8152:7052
      - 8153:7053
    volumes: 
      - /var/run/:/host/var/run/
      - ./channel-artifacts:/etc/hyperledger/configtx
      - ./crypto-config/peerOrganizations/org2.cnabs.com/users:/etc/hyperledger/msp/users
      - ./crypto-config/peerOrganizations/org2.cnabs.com/peers/peer1.org2.cnabs.com/msp:/etc/hyperledger/msp/peer
    extra_hosts:
      - "orderer.cnabs.com:192.168.32.129"
      - "peer0.org1.cnabs.com:192.168.32.129"
      - "peer1.org1.cnabs.com:192.168.32.128"
      - "peer0.org2.cnabs.com:192.168.32.128"
      - "peer1.org2.cnabs.com:192.168.32.129"