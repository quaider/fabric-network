version: '2'

networks:
  cnabs:

services: 
  
  orderer.cnabs.com:
    container_name: orderer.cnabs.com
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
      - ./channel-artifacts/:/etc/hyperledger/configtx
      - ./crypto-config/ordererOrganizations/cnabs.com/orderers/orderer.cnabs.com/:/etc/hyperledger/msp/orderer
      - ./crypto-config/peerOrganizations/org1.cnabs.com/peers/peer0.org1.cnabs.com/:/etc/hyperledger/msp/peerOrg1

    networks:
      - cnabs

  peer1.org1.cnabs.com:
    container_name: peer1.org1.cnabs.com
    image: hyperledger/fabric-peer
    environment: 
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # https://docs.docker.com/compose/networking/
      # CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE 这个配置非常重要，虽然不明白其具体含义，但是如果没有这个配置的话，链码所在
      # 的容器将与去其他节点的容器处于不同的网络中，这意味着链码容器无法访问到其他的容器(如实例化时的peer)，比如报错 域名解析错误，
      # 所以猜测是用来指定容器网络的配置(但又不是容器自身)
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=blockchain_cnabs
      - CORE_PEER_ID=peer1.org1.cnabs.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=debug
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer1.org1.cnabs.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:7051
      # CORE_PEER_GOSSIP_BOOTSTRAP 只需在非锚节点上设置，它的值通常是锚节点(对于每个组织可以将其设置为已经在线上的节点)
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.cnabs.com:7051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    # --peer-chaincodedev=true用于开启dev模式，生成环境去掉即可
    command: peer node start
    # peer容器的7052端口用于 chaincode连接到peer节点(容器)
    ports: 
      - 7051:7051
      - 7052:7052
      - 7053:7053
    volumes: 
      - /var/run/:/host/var/run/
      - ./channel-artifacts:/etc/hyperledger/configtx
      - ./crypto-config/peerOrganizations/org1.cnabs.com/users:/etc/hyperledger/msp/users
      - ./crypto-config/peerOrganizations/org1.cnabs.com/peers/peer1.org1.cnabs.com/msp:/etc/hyperledger/msp/peer

    networks:
      - cnabs

    extra_hosts:
      - "orderer.cnabs.com:192.168.8.131"
      - "peer0.org1.cnabs.com:192.168.8.132"